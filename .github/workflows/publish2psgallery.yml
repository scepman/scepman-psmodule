name: Publish Module

on:
  workflow_dispatch:
    inputs:
      channel:
        description: 'Release Channel'
        required: true
        default: 'beta'
        type: choice
        options:
          - production
          - beta
          - none

jobs:
  code-sign-scepman:
    name: Code Sign SCEPMan PowerShell Module
    runs-on: windows-latest
    environment: AzureC4A8CodeSigning
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout (as using 'permissions:' will reset the default rights to 'none')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.channel == 'none' && 'main' || github.event.inputs.channel }}  # Use the main branch if no channel is specified
      - name: Install AzureSignTool
        run: dotnet tool install --no-cache --global AzureSignTool

      - name: Azure CLI login
        uses: azure/login@v1
        with:
          tenant-id: a53834b7-42bc-46a3-b004-369735c3acf9 # c4a8.onmicrosoft.com
          client-id: e9310a4f-a6b0-4374-a623-1333cbc62f96 # from Entra ID app registration
          allow-no-subscriptions: true

      - name: Azure CLI get token
        run: |
          $kv_token=$(az account get-access-token --scope https://vault.azure.net/.default --query accessToken --output tsv)
          echo "::add-mask::$kv_token"
          echo "CODE_SIGN_AKV_ACCESS_TOKEN=$kv_token" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Create Input File list
        run: |
          Get-ChildItem -Path .\SCEPman -Recurse -Include *.ps1,SCEPman.psm1,SCEPman.psd1 | Select-Object -ExpandProperty FullName | Out-File -FilePath .\input.txt -Encoding utf8

      - name: Sign all PowerShell files
        run: |
          azuresigntool.exe sign --verbose `
            --azure-key-vault-url "https://kv-c4a8-code-signing-prd.vault.azure.net" `
            --azure-key-vault-accesstoken ${{ env.CODE_SIGN_AKV_ACCESS_TOKEN }} `
            --azure-key-vault-certificate "glueckkanja-ag-202311" `
            --timestamp-rfc3161 "http://timestamp.digicert.com" `
            -ifl .\input.txt

      - name: Upload signed module to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Signed Module
          path: ./SCEPman

      - name: Azure CLI logout
        run: |
          az logout
          az cache purge
          az account clear

  publish-to-psgallery:
    runs-on: ubuntu-latest
    if: github.event.inputs.channel != 'none'
    needs: code-sign-scepman
    steps:
      - name: Checkout
        uses: actions/download-artifact@v4
        with:
          name: Signed Module
          path: ./SCEPman

      - name: Publish
        run: |
          Publish-Module -Path ./SCEPman -NuGetApiKey ${{secrets.PSGalleryAPIKey}}
        shell: pwsh